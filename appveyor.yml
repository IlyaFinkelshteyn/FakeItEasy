version: '{build}'
image: Visual Studio 2017

pull_requests:
  do_not_increment_build_number: true

install:
- ps: >-
    if ($env:APPVEYOR_REPO_TAG_NAME) {
        $headers = @{
          "Authorization" = "Bearer $env:GITHUB_TOKEN"
          "Content-type" = "application/json"
        }
        $releases = Invoke-RestMethod -Uri "https://api.github.com/repos/$env:APPVEYOR_REPO_NAME/releases" -Headers $headers  -Method GET
        $env:releaseDescription = ($releases | Where-Object {$_.name -eq "$env:APPVEYOR_REPO_TAG_NAME"}).body
        if ($env:APPVEYOR_REPO_TAG_NAME -like "-") {
            $env:isPrerelease = "true"
        } else {
            $env:isPrerelease = "false"
        }
        echo ("isPrerelease: " + $env:isPrerelease)
        echo ("description: " + $env:releaseDescription)
        echo ("APPVEYOR_REPO_TAG_NAME: " + "$env:APPVEYOR_REPO_TAG_NAME")
        $env:releaseDescription > descr.txt
    }
- ps: write-host "releaseDescription  $env:releaseDescription" 

environment:
    BUILD: $(APPVEYOR_BUILD_NUMBER)
    GITHUB_TOKEN:
        secure: lFzX7i6KyahX1MfiZx9qgD3asWP+4jb9c1ple2DAabQVgYqXfNEqIBMrwcMLD3un

build_script:
- ps: write-host "releaseDescription  $env:releaseDescription" 
- cmd: build.cmd pack
- ps: write-host "releaseDescription  $env:releaseDescription" 

nuget:
    disable_publish_on_pr: true

test: off

artifacts:
    - path: .\artifacts\*\*

before_deploy:
- ps: write-host "releaseDescription  $env:releaseDescription" 
- ps: type .\descr.txt
- ps: $env:releaseDescription = Get-Content .\descr.txt
- ps: write-host "releaseDescription  $env:releaseDescription" 

deploy:
    - provider: GitHub
      auth_token: $(GITHUB_TOKEN)
      artifact: /.*\.nupkg/
      draft: true
      force_update: true
      tag: $(APPVEYOR_REPO_TAG_NAME)
      prerelease: $(isPrerelease)
      description: $(releaseDescription)
      on:
         appveyor_repo_tag: true
